apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
    }
}


android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 31
    }
}

class SDPFactory extends DefaultTask {

    @Input
    String unit = "dp"
    @Input
    double positiveMax = 600
    @Input
    double negativeMax = 60

    @TaskAction
    def create() {
        String resFolder = project.getProjectDir().getPath() + "/src/main/res/"
        for (double dimen = 300; dimen <= 800; dimen = dimen + 30) {
            String folder = resFolder + "values-sw" + (int) dimen + "dp"
            String fileName = folder + "/positive_sdps.xml"
            new File(folder).mkdir()
            new File(fileName).createNewFile()
            PrintWriter printWriter = new PrintWriter(fileName)
            printWriter.println("<?xml version=\"1.0\" encoding=\"utf-8\"?>")
            printWriter.println("<resources>")
            for (int i = 1; i <= positiveMax; i++) {
                double ratio = i / 375d
                double sdp = ratio * dimen
                printWriter.printf("\t<dimen name=\"_%dsdp\">%.2f" + unit + "</dimen>\r\n", i, sdp)
            }
            printWriter.println("</resources>")
            printWriter.close()
        }
        for (double dimen = 300; dimen <= 800; dimen = dimen + 30) {
            String folder = resFolder + "values-sw" + (int) dimen + "dp"
            String fileName = folder + "/negative_sdps.xml"
            new File(folder).mkdir()
            new File(fileName).createNewFile()
            PrintWriter printWriter = new PrintWriter(fileName)
            printWriter.println("<?xml version=\"1.0\" encoding=\"utf-8\"?>")
            printWriter.println("<resources>")
            for (int i = 1; i <= negativeMax; i++) {
                double ratio = i / 375d
                double sdp = ratio * dimen
                printWriter.printf("\t<dimen name=\"_minus%dsdp\">%.2f" + unit + "</dimen>\r\n", i, -sdp)
            }
            printWriter.println("</resources>")
            printWriter.close()
        }
    }
}


class SSPFactory extends DefaultTask {

    @Input
    String unit = "sp"
    @Input
    double positiveMax = 100

    @TaskAction
    def create() {
        String resFolder = project.getProjectDir().getPath() + "/src/main/res/"
        for (double dimen = 300; dimen <= 800; dimen = dimen + 30) {
            createPositive(resFolder, dimen)
        }
        createPositive(resFolder, 1080)
    }

    private void createPositive(String resFolder, double dimen) {
        String folder = resFolder + "values-sw" + (int) dimen + "dp"
        String fileName = folder + "/positive_ssps.xml"
        new File(folder).mkdir()
        new File(fileName).createNewFile()
        PrintWriter printWriter = new PrintWriter(fileName)
        printWriter.println("<?xml version=\"1.0\" encoding=\"utf-8\"?>")
        printWriter.println("<resources>")
        for (int i = 1; i <= positiveMax; i++) {
            double ratio = i / 375d
            double ssp = ratio * dimen
            printWriter.printf("\t<dimen name=\"_%dssp\">%.2f" + unit + "</dimen>\r\n", i, ssp)
        }
        printWriter.println("</resources>")
        printWriter.close()
    }
}

task createSDP(type: SDPFactory) {
}

task createSSP(type: SSPFactory) {
}

createSSP {
    unit = "sp"
    positiveMax = 34
}


createSDP {
    unit = "dp"
    positiveMax = 350
    negativeMax = 30
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

repositories {
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}